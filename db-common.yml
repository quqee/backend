version: '3.8'
services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    env_file:
      - .env
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgres:/var/lib/postgresql/data
    networks:
      - db

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/var/lib/redis/data
    networks:
      - db

  migration:
    image: migration:latest
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/${HACKATHON_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_SCHEMA=public
    command: "update"
    networks:
      - db

volumes:
  postgres:
    driver: local
  redis:
    driver: local

networks:
  db:
    driver: bridge
    name: app_network